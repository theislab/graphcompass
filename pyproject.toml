# pyproject.toml adapted from https://github.com/scverse/squidpy/blob/main/pyproject.toml

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = "graphcompass"
#dynamic = ["version"]
version = "0.2.3"
description = "Spatial metrics for differential analyses of cell organization across conditions"
readme = "README.md" #change to README_pypi.md for PyPI
requires-python = ">=3.9, <3.12"
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS :: MacOS X",
    "Typing :: Typed",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Environment :: Console",
    "Framework :: Jupyter",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Visualization",
]

keywords = [
    "spatial omics",
    "bio-informatics",
    "tissue architecture",
    "spatial data analysis",
    "cell spatial organization",
    "graph analytics",
]
authors = [
    {name = "Mayar Ali"},
    {name = "Merel Kuijs"},
]
maintainers = [
    {name = "Mayar Ali", email = "mayar.ali@helmholtz-munich.de"},
    {name = "Merel Kuijs", email = "merelsentina.kuijs@helmholtz-munich.de"}
]

dependencies = [
   "aiohttp>=3.8.1",
   "anndata>=0.9",
   "cycler>=0.11.0",
   "Cython>=3.0.2",
   "dask-image>=0.5.0",
   "dask[array]>=2021.02.0",
   "docrep>=0.3.1",
   "fsspec>=2021.11.0",
   "igraph>=0.11.3",
   "leidenalg>=0.8.2",
   "matplotlib>=3.3",
   "matplotlib-scalebar>=0.8.0",
   "networkx>=2.8.6",
   "NetLSD>=1.0.2",
   "numba>=0.56.4",
   "numpy>=1.23.0",
   "omnipath>=1.0.7",
   "pandas>=2.1.0",
   "Pillow>=8.0.0",
   "scanpy>=1.9.3",
   "scikit-image>=0.19,<=0.20",
   "scikit-learn>=0.24.0",
   "squidpy>=1.2.2",
   "spatialdata",
   "statannot>=0.2.3",
   "statsmodels>=0.12.0",
   "tifffile!=2022.4.22",
   "tqdm>=4.50.2",
   "validators>=0.18.2",
   "wwl@git+https://github.com/BorgwardtLab/WWL@b7aee69#egg=wwl&subdirectory=src",
   "xarray>=0.16.1",
   "zarr>=2.6.1",
]

dev = [
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
]
test = [
    "pytest>=7",
    "pytest-xdist>=3",
    "pytest-mock>=3.5.0",
    "pytest-cov>=4",
    "coverage[toml]>=7",
]
docs = [
    "ipython",
    "ipywidgets>=8.0.0",
    "sphinx>=5.3",
    "sphinx-autodoc-annotation",
    "sphinx-autodoc-typehints>=1.10.3",
    "sphinx_rtd_theme",
    "sphinxcontrib-bibtex>=2.3.0",
    "sphinxcontrib-spelling>=7.6.2",
    "nbsphinx>=0.8.1",
    "myst-nb>=0.17.1",
    "sphinx_copybutton>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/theislab/graphcompass"
"Bug Tracker" = "https://github.com/theislab/graphcompass/issues"
"Source Code" = "https://github.com/theislab/graphcompass"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools_scm]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/

)
'''


[tool.hatch.build.hooks.vcs]
version-file = "src/graphcompass/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.wheel]
packages = ['src/graphcompass']

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
src = ["src"]
exclude = ["tests/"]
line-length = 120
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "TID251",  # Banned imports
    "RUF100",  # Report unused noqa directives
    "ICN",     # Follow import conventions
    "PTH",     # Pathlib instead of os.path
    "TCH",     # manage type checking blocks
]

ignore= [
# line too long -> we accept long comment lines; formatting gets rid of long code lines
"E501",
# Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
"E731",
# allow I, O, l as variable names -> I is the identity matrix
"E741",
# Missing docstring in public package
"F403",
]

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]
"*.ipynb" = ["E402","PTH118"]

[tool.ruff.lint.isort]
known-first-party = ["graphcompass"]
